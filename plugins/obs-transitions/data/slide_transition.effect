uniform float4x4 ViewProj;
uniform texture2d tex_a;
uniform texture2d tex_b;
uniform float2 tex_a_dir;
uniform float2 tex_b_dir;


sampler_state textureSampler {
	Filter    = Linear;
	AddressU  = Clamp;
	AddressV  = Clamp;
};

struct VertData {
	float4 pos : POSITION;
	float2 uv  : TEXCOORD0;
};

VertData VSDefault(VertData v_in)
{
	VertData vert_out;
	vert_out.pos = mul(float4(v_in.pos.xyz, 1.0), ViewProj);
	vert_out.uv  = v_in.uv;
	return vert_out;
}

float4 PSSlide(VertData v_in) : TARGET
{
	float2 tex_a_uv = v_in.uv + tex_a_dir;
	float2 tex_b_uv = v_in.uv - tex_b_dir;
	float4 outc;

	outc = (tex_a_uv.x - saturate(tex_a_uv.x) != 0.0) ||
	       (tex_a_uv.y - saturate(tex_a_uv.y) != 0.0)
		   ? tex_b.Sample(textureSampler, tex_b_uv)
		   : tex_a.Sample(textureSampler, tex_a_uv);

	return outc;
}

technique Slide
{
	pass
	{
		vertex_shader = VSDefault(v_in);
		pixel_shader = PSSlide(v_in);
	}
}
