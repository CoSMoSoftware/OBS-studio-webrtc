diff --git a/plugins/obs-ndi/CMakeLists.txt b/plugins/obs-ndi/CMakeLists.txt
index 29026e1..cd72566 100644
--- a/plugins/obs-ndi/CMakeLists.txt
+++ b/plugins/obs-ndi/CMakeLists.txt
@@ -34,18 +34,32 @@ target_sources(
 target_sources(obs-ndi PRIVATE src/forms/SettingsDialog.cpp src/forms/SettingsDialog.h
                                src/forms/resources.qrc)
 
-target_include_directories(obs-ndi PRIVATE ${CMAKE_SOURCE_DIR}/src ${CMAKE_SOURCE_DIR}/lib/ndi)
+target_include_directories(obs-ndi PRIVATE ${CMAKE_SOURCE_DIR}/src
+                                           ${CMAKE_SOURCE_DIR}/plugins/obs-ndi/lib/ndi)
 
 # ----------------------------------------------------------------------
 
-find_package(libobs REQUIRED)
+list(APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/external")
+list(APPEND CMAKE_MODULE_PATH "${CMAKE_BINARY_DIR}/UI/obs-frontend-api")
+message(STATUS "******************* CMAKE_MODULE_PATH = ${CMAKE_MODULE_PATH}")
+find_package(Libobs REQUIRED)
+
+file(GLOB TATA ${CMAKE_BINARY_DIR}/UI/obs-frontend-api/*)
+message(STATUS "################################################")
+message(STATUS "list of files in ${CMAKE_BINARY_DIR}/UI/obs-frontend-api")
+foreach(T IN LISTS TATA)
+  message(STATUS ${T})
+endforeach()
+message(STATUS "################################################")
+
+set(obs-frontend-api_DIR "${CMAKE_BINARY_DIR}/UI/obs-frontend-api")
 find_package(obs-frontend-api REQUIRED)
 include(cmake/ObsPluginHelpers.cmake)
 find_qt(COMPONENTS Widgets Core)
 
 configure_file(src/plugin-macros.h.in ${CMAKE_SOURCE_DIR}/src/plugin-macros.generated.h)
 
-target_sources(${CMAKE_PROJECT_NAME} PRIVATE src/plugin-macros.generated.h)
+target_sources(${PROJECT_NAME} PRIVATE src/plugin-macros.generated.h)
 
 target_include_directories(obs-ndi PRIVATE ${CMAKE_SOURCE_DIR}/src)
 
@@ -67,7 +81,7 @@ if(OS_WINDOWS)
                  ${CMAKE_BINARY_DIR}/installer-Windows.generated.iss)
 
   if(MSVC)
-    target_compile_options(${CMAKE_PROJECT_NAME} PRIVATE /W4)
+    target_compile_options(${PROJECT_NAME} PRIVATE /W4)
   endif()
   # --- End of section ---
 
@@ -80,17 +94,17 @@ elseif(OS_MACOS)
   set(MACOSX_PLUGIN_BUNDLE_VERSION "${CMAKE_PROJECT_VERSION}")
   set(MACOSX_PLUGIN_SHORT_VERSION_STRING "1")
 
-  target_compile_options(${CMAKE_PROJECT_NAME} PRIVATE -Wall)
+  target_compile_options(${PROJECT_NAME} PRIVATE -Wall)
 
-  set_target_properties(${CMAKE_PROJECT_NAME} PROPERTIES PREFIX "")
+  set_target_properties(${PROJECT_NAME} PROPERTIES PREFIX "")
   # --- End of section ---
 
   # --- Linux-specific build settings and tasks ---
 else()
-  target_compile_options(${CMAKE_PROJECT_NAME} PRIVATE -Wall)
+  target_compile_options(${PROJECT_NAME} PRIVATE -Wall)
 
-  set_target_properties(${CMAKE_PROJECT_NAME} PROPERTIES PREFIX "")
+  set_target_properties(${PROJECT_NAME} PROPERTIES PREFIX "")
 endif()
 # --- End of section ---
 
-setup_plugin_target(${CMAKE_PROJECT_NAME})
+setup_plugin_target(${PROJECT_NAME})
diff --git a/plugins/obs-ndi/cmake/ObsPluginHelpers.cmake b/plugins/obs-ndi/cmake/ObsPluginHelpers.cmake
index 450c46d..62e32d8 100644
--- a/plugins/obs-ndi/cmake/ObsPluginHelpers.cmake
+++ b/plugins/obs-ndi/cmake/ObsPluginHelpers.cmake
@@ -172,7 +172,7 @@ if(OS_POSIX)
   # * C++, GCC ONLY - Warning about implicit conversion of NULL to another type
   # * Enable color diagnostics on Clang (CMAKE_COLOR_DIAGNOSTICS available in CMake 3.24)
   target_compile_options(
-    ${CMAKE_PROJECT_NAME}
+    ${PROJECT_NAME}
     PRIVATE
       -Werror
       -Wextra
@@ -193,7 +193,7 @@ if(OS_POSIX)
   # GCC 12.1.0 has a regression bug which trigger maybe-uninitialized warnings where there is not.
   # (https://gcc.gnu.org/bugzilla/show_bug.cgi?id=105562)
   if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU" AND CMAKE_CXX_COMPILER_VERSION VERSION_EQUAL "12.1.0")
-    target_compile_options(${CMAKE_PROJECT_NAME} PRIVATE -Wno-error=maybe-uninitialized)
+    target_compile_options(${PROJECT_NAME} PRIVATE -Wno-error=maybe-uninitialized)
   endif()
 
   if(NOT CCACHE_SET)
@@ -252,7 +252,7 @@ elseif(_HOST_ARCH MATCHES "arm64|arm64e|aarch64")
     check_c_compiler_flag("-fopenmp-simd" C_COMPILER_SUPPORTS_OPENMP_SIMD)
     check_cxx_compiler_flag("-fopenmp-simd" CXX_COMPILER_SUPPORTS_OPENMP_SIMD)
     target_compile_options(
-      ${CMAKE_PROJECT_NAME}
+      ${PROJECT_NAME}
       PRIVATE
         -DSIMDE_ENABLE_OPENMP
         "$<$<AND:$<COMPILE_LANGUAGE:C>,$<BOOL:C_COMPILER_SUPPORTS_OPENMP_SIMD>>:-fopenmp-simd>"
@@ -264,7 +264,7 @@ endif()
 if(OS_MACOS)
   # Set macOS-specific C++ standard library
   target_compile_options(
-    ${CMAKE_PROJECT_NAME}
+    ${PROJECT_NAME}
     PRIVATE "$<$<COMPILE_LANG_AND_ID:OBJC,AppleClang,Clang>:-fcolor-diagnostics>" -stdlib=libc++)
 
   # Set build architecture to host architecture by default
@@ -498,7 +498,7 @@ else()
 
     # Setup Linux-specific CPack values for "deb" package generation
     if(OS_LINUX)
-      set(CPACK_PACKAGE_NAME "${CMAKE_PROJECT_NAME}")
+      set(CPACK_PACKAGE_NAME "${PROJECT_NAME}")
       set(CPACK_DEBIAN_PACKAGE_MAINTAINER "${LINUX_MAINTAINER_EMAIL}")
       set(CPACK_PACKAGE_VERSION "${CMAKE_PROJECT_VERSION}")
       set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-linux-x86_64")
@@ -547,7 +547,7 @@ else()
       # * DISABLE warnings about nonstandard nameless structs/unions,
       #   https://docs.microsoft.com/en-us/cpp/error-messages/compiler-warnings/compiler-warning-level-4-c4201?view=msvc-170
       target_compile_options(
-        ${CMAKE_PROJECT_NAME}
+        ${PROJECT_NAME}
         PRIVATE /MP
                 /W3
                 /WX
@@ -572,7 +572,7 @@ else()
       # * RelWithDebInfo ONLY - Disable incremental linking, but enable COMDAT folding,
       #   https://docs.microsoft.com/en-us/cpp/build/reference/opt-optimizations?view=msvc-170
       target_link_options(
-        ${CMAKE_PROJECT_NAME}
+        ${PROJECT_NAME}
         PRIVATE
         "LINKER:/OPT:REF"
         "LINKER:/WX"
diff --git a/plugins/obs-ndi/cmake/bundle/macos/installer-macos.pkgproj.in b/plugins/obs-ndi/cmake/bundle/macos/installer-macos.pkgproj.in
index 2a1f643..300f10a 100644
--- a/plugins/obs-ndi/cmake/bundle/macos/installer-macos.pkgproj.in
+++ b/plugins/obs-ndi/cmake/bundle/macos/installer-macos.pkgproj.in
@@ -91,7 +91,7 @@
 											<key>GID</key>
 											<integer>80</integer>
 											<key>PATH</key>
-											<string>obs-studio</string>
+											<string>obs-webrtc</string>
 											<key>PATH_TYPE</key>
 											<integer>2</integer>
 											<key>PERMISSIONS</key>
