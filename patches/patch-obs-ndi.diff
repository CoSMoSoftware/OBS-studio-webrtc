diff --git a/plugins/obs-ndi/CMakeLists.txt b/plugins/obs-ndi/CMakeLists.txt
index 29026e1..4e65370 100644
--- a/plugins/obs-ndi/CMakeLists.txt
+++ b/plugins/obs-ndi/CMakeLists.txt
@@ -34,20 +34,24 @@ target_sources(
 target_sources(obs-ndi PRIVATE src/forms/SettingsDialog.cpp src/forms/SettingsDialog.h
                                src/forms/resources.qrc)
 
-target_include_directories(obs-ndi PRIVATE ${CMAKE_SOURCE_DIR}/src ${CMAKE_SOURCE_DIR}/lib/ndi)
+target_include_directories(obs-ndi PRIVATE ${CMAKE_SOURCE_DIR}/src
+                                           ${CMAKE_SOURCE_DIR}/plugins/obs-ndi/lib/ndi
+                                           ${CMAKE_SOURCE_DIR}/UI/obs-frontend-api)
 
 # ----------------------------------------------------------------------
 
-find_package(libobs REQUIRED)
+#list(APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/external")
+#list(APPEND CMAKE_MODULE_PATH "${CMAKE_BINARY_DIR}/UI/obs-frontend-api")
+#find_package(Libobs REQUIRED)
+
+set(obs-frontend-api_DIR "${CMAKE_BINARY_DIR}/UI/obs-frontend-api")
 find_package(obs-frontend-api REQUIRED)
-include(cmake/ObsPluginHelpers.cmake)
+#include(cmake/ObsPluginHelpers.cmake)
 find_qt(COMPONENTS Widgets Core)
 
 configure_file(src/plugin-macros.h.in ${CMAKE_SOURCE_DIR}/src/plugin-macros.generated.h)
 
-target_sources(${CMAKE_PROJECT_NAME} PRIVATE src/plugin-macros.generated.h)
-
-target_include_directories(obs-ndi PRIVATE ${CMAKE_SOURCE_DIR}/src)
+target_sources(${PROJECT_NAME} PRIVATE src/plugin-macros.generated.h)
 
 target_link_libraries(obs-ndi OBS::libobs OBS::obs-frontend-api Qt::Core Qt::Widgets)
 
@@ -63,11 +67,11 @@ target_compile_features(obs-ndi PRIVATE cxx_std_17)
 
 # --- Windows-specific build settings and tasks ---
 if(OS_WINDOWS)
-  configure_file(cmake/bundle/windows/installer-Windows.iss.in
-                 ${CMAKE_BINARY_DIR}/installer-Windows.generated.iss)
+  # configure_file(cmake/bundle/windows/installer-Windows.iss.in
+  #                ${CMAKE_BINARY_DIR}/installer-Windows.generated.iss)
 
   if(MSVC)
-    target_compile_options(${CMAKE_PROJECT_NAME} PRIVATE /W4)
+    target_compile_options(${PROJECT_NAME} PRIVATE /W4)
   endif()
   # --- End of section ---
 
@@ -80,17 +84,22 @@ elseif(OS_MACOS)
   set(MACOSX_PLUGIN_BUNDLE_VERSION "${CMAKE_PROJECT_VERSION}")
   set(MACOSX_PLUGIN_SHORT_VERSION_STRING "1")
 
-  target_compile_options(${CMAKE_PROJECT_NAME} PRIVATE -Wall)
+  target_compile_options(${PROJECT_NAME} PRIVATE -Wall)
 
-  set_target_properties(${CMAKE_PROJECT_NAME} PROPERTIES PREFIX "")
+  set_target_properties(${PROJECT_NAME} PROPERTIES PREFIX "")
   # --- End of section ---
 
   # --- Linux-specific build settings and tasks ---
 else()
-  target_compile_options(${CMAKE_PROJECT_NAME} PRIVATE -Wall)
+  target_compile_options(${PROJECT_NAME} PRIVATE -Wall)
 
-  set_target_properties(${CMAKE_PROJECT_NAME} PROPERTIES PREFIX "")
+  set_target_properties(${PROJECT_NAME} PROPERTIES PREFIX "")
 endif()
 # --- End of section ---
 
-setup_plugin_target(${CMAKE_PROJECT_NAME})
+string(REPLACE "-" "_" project_name_without_dash "${PROJECT_NAME}")
+cpack_add_component_group(${project_name_without_dash}_group
+                          DISPLAY_NAME "obs-ndi plugin"
+                          DESCRIPTION "Network A/V in OBS Studio with NewTek's NDI technology")
+
+setup_plugin_target(${PROJECT_NAME})
diff --git a/plugins/obs-ndi/cmake/bundle/macos/installer-macos.pkgproj.in b/plugins/obs-ndi/cmake/bundle/macos/installer-macos.pkgproj.in
index 2a1f643..3673622 100644
--- a/plugins/obs-ndi/cmake/bundle/macos/installer-macos.pkgproj.in
+++ b/plugins/obs-ndi/cmake/bundle/macos/installer-macos.pkgproj.in
@@ -91,7 +91,7 @@
 											<key>GID</key>
 											<integer>80</integer>
 											<key>PATH</key>
-											<string>obs-studio</string>
+											<string>obs-webrtc</string>
 											<key>PATH_TYPE</key>
 											<integer>2</integer>
 											<key>PERMISSIONS</key>
