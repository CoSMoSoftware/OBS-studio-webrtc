diff --git a/plugins/obs-ndi/CMakeLists.txt b/plugins/obs-ndi/CMakeLists.txt
index e851dda..39dcc48 100644
--- a/plugins/obs-ndi/CMakeLists.txt
+++ b/plugins/obs-ndi/CMakeLists.txt
@@ -44,6 +44,8 @@ add_library(obs-ndi MODULE
 	${obs-ndi_SOURCES}
 	${obs-ndi_HEADERS})
 
+add_dependencies(obs-ndi obs-frontend-api)
+
 include_directories(
 	"lib/ndi"
 	"${LIBOBS_INCLUDE_DIR}/../UI/obs-frontend-api"
@@ -170,3 +172,5 @@ if(UNIX AND NOT APPLE)
 	install(FILES ${locale_files}
 		DESTINATION "${CMAKE_INSTALL_FULL_DATAROOTDIR}/obs/obs-plugins/obs-ndi/locale")
 endif()
+
+install_obs_plugin_with_data(obs-ndi data)
\ No newline at end of file
diff --git a/plugins/obs-ndi/src/Config.cpp b/plugins/obs-ndi/src/Config.cpp
index 18426fe..ca05647 100644
--- a/plugins/obs-ndi/src/Config.cpp
+++ b/plugins/obs-ndi/src/Config.cpp
@@ -32,9 +32,9 @@ Config* Config::_instance = nullptr;
 
 Config::Config() :
 	OutputEnabled(false),
-	OutputName("OBS"),
+	OutputName("Remote Filming-A"),
 	PreviewOutputEnabled(false),
-	PreviewOutputName("OBS Preview")
+	PreviewOutputName("Remote Filming-A Preview")
 {
 	config_t* obs_config = obs_frontend_get_global_config();
 	if (obs_config) {
diff --git a/plugins/obs-ndi/src/obs-ndi-filter.cpp b/plugins/obs-ndi/src/obs-ndi-filter.cpp
index c7dc7f8..02c3525 100644
--- a/plugins/obs-ndi/src/obs-ndi-filter.cpp
+++ b/plugins/obs-ndi/src/obs-ndi-filter.cpp
@@ -18,6 +18,7 @@ along with this program; If not, see <https://www.gnu.org/licenses/>
 
 #ifdef _WIN32
 #include <Windows.h>
+#include <string>
 #endif
 
 #include <obs-module.h>
@@ -99,7 +100,7 @@ obs_properties_t* ndi_filter_getproperties(void* data)
 		void* private_data)
 	{
 		#if defined(_WIN32)
-			ShellExecute(NULL, "open", "http://ndi.newtek.com", NULL, NULL, SW_SHOWNORMAL);
+			ShellExecute(NULL, std::wstring(L"open").c_str(), std::wstring(L"http://ndi.newtek.com").c_str(), NULL, NULL, SW_SHOWNORMAL);
 		#elif defined(__linux__) || defined(__APPLE__)
 			int suppresswarning = system("open http://ndi.newtek.com");
 		#endif
diff --git a/plugins/obs-ndi/src/obs-ndi-source.cpp b/plugins/obs-ndi/src/obs-ndi-source.cpp
index c4e2009..6d97209 100644
--- a/plugins/obs-ndi/src/obs-ndi-source.cpp
+++ b/plugins/obs-ndi/src/obs-ndi-source.cpp
@@ -18,6 +18,7 @@ along with this program; If not, see <https://www.gnu.org/licenses/>
 
 #ifdef _WIN32
 #include <Windows.h>
+#include <string>
 #endif
 
 #include <obs-module.h>
@@ -265,7 +266,7 @@ obs_properties_t* ndi_source_getproperties(void* data)
 		void* private_data)
 	{
 		#if defined(_WIN32)
-			ShellExecute(NULL, "open", "http://ndi.newtek.com", NULL, NULL, SW_SHOWNORMAL);
+			ShellExecute(NULL, std::wstring(L"open").c_str(), std::wstring(L"http://ndi.newtek.com").c_str(), NULL, NULL, SW_SHOWNORMAL);
 		#elif defined(__linux__) || defined(__APPLE__)
 			int suppresswarning = system("open http://ndi.newtek.com");
 		#endif
diff --git a/plugins/obs-ndi/src/obs-ndi.cpp b/plugins/obs-ndi/src/obs-ndi.cpp
index 673c9e1..e7fa24a 100644
--- a/plugins/obs-ndi/src/obs-ndi.cpp
+++ b/plugins/obs-ndi/src/obs-ndi.cpp
@@ -93,10 +93,10 @@ bool obs_module_load(void)
 #endif
 #endif
 
-		QMessageBox::critical(main_window,
-			obs_module_text("NDIPlugin.LibError.Title"),
-			obs_module_text(msg_string_name),
-			QMessageBox::Ok, QMessageBox::NoButton);
+		// QMessageBox::critical(main_window,
+		// 	obs_module_text("NDIPlugin.LibError.Title"),
+		// 	obs_module_text(msg_string_name),
+		// 	QMessageBox::Ok, QMessageBox::NoButton);
 		return false;
 	}
 
